<?xml version="1.0"?>
<launch>

  <!-- arg to config the launch file-->
  <arg name="id_robot" default="$(optenv ROBOT_ID pallet_truck)"/>
  <arg name="prefix" value="$(arg id_robot)_"/>
  <arg name="robot_model" default="$(optenv ROBOT_MODEL pallet_truck)"/>
  <arg name="xacro_robot" default="$(optenv ROBOT_XACRO pallet_truck_std.urdf.xacro)"/>

  <!-- Robot configuration -->
  <arg name="x_init_pose" default="0"/>
  <arg name="y_init_pose" default="0"/>
  <arg name="z_init_pose" default="0"/>
  <arg name="launch_base_hw_sim" default="false"/>
  <arg name="launch_battery_estimator" default="false"/>

  <!-- Gazebo arguments -->
  <arg name="launch_gazebo" default="true" />
  <arg name="world" default="$(find pallet_truck_gazebo)/worlds/pallet_truck_epal.world"/>
  <arg name="debug" default="false"/>
  <arg name="paused" value="false"/>
  <arg name="headless" value="false"/>
  <arg name="gui" value="true"/>

  <!-- Launch gazebo -->
  <include if="$(arg launch_gazebo)" file="$(find gazebo_ros)/launch/empty_world.launch">
    <arg name="world_name" value="$(arg world)"/>
    <arg name="debug" value="$(arg debug)" />
    <arg name="paused" value="$(arg paused)" />
    <arg name="headless" value="$(arg headless)"/>
    <arg name="gui" value="$(arg gui)"/>
  </include>

  <!-- Launch robot -->
  <group ns="$(arg id_robot)">

    <!-- Load the URDF into the ROS Parameter Server (this could be replaced by pall -->
    <include file="$(find pallet_truck_description)/launch/pallet_truck_state.launch" >
      <arg name="id_robot" value="$(arg id_robot)" />
      <arg name="prefix" value="$(arg prefix)" />
      <arg name="version" value="$(arg xacro_robot)" />
    </include>

    <!-- Spawner model into gazebo -->
    <node name="urdf_spawner_robot_model" pkg="gazebo_ros" type="spawn_model" respawn="false" output="screen" 
        args="-x $(arg x_init_pose) -y $(arg y_init_pose) -z $(arg z_init_pose) -urdf -param robot_description -model $(arg id_robot)" />

    <!-- start pallet_truck_control nodes -->
    <include file="$(find pallet_truck_control)/launch/pallet_truck_control.launch">
      <arg name="id_robot" value="$(arg id_robot)"/>
      <arg name="prefix" value="$(arg prefix)"/>
    </include>

    <!-- base_hw_sim -->
    <include if="$(arg launch_base_hw_sim)" file="$(find robotnik_base_hw_sim)/launch/pallet_truck_hw_sim.launch">
      <arg name="prefix" value="$(arg prefix)"/>
    </include>

    <group if="$(arg launch_battery_estimator)">
      <!-- start dock_manager node -->
      <include file="$(find charge_manager)/launch/charge_manager.launch">
        <arg name="docker_mode" value="manual_sw"/>
        <arg name="inverted_contact_relay_input" value="false"/>
        <arg name="contact_relay_input_number" value="2"/>
        <arg name="charger_relay_output_number" value="1"/>
      </include>

      <!-- start battery_estimation node -->
      <include file="$(find battery_estimation)/launch/table_battery.launch">
        <arg name="battery_voltage" value="48"/>
        <arg name="read_voltage_from_analog_input" value="true"/>
        <arg name="voltage_analog_input_number" value="1" />
        <arg name="current_analog_input_number" value="2" />
      </include>
    </group>
  </group>

</launch>
